#!/usr/bin/env bash
################################################################################
# Function that expands functionality of mppnccombine, to also
# work for files split along an *unlimited* dimension e.g. 'time'
################################################################################
# Parse args
silent=false
! which ncks &>/dev/null && raise "ncks not found, mppncdivide requires the NetCDF Operators (NCO) tools."
source header.sh
while [ $# -ne 0 ]; do
  case $1 in
    -s) silent=true ;;
    -*) raise "Unknown flag ${1}." ;;
    *)  [ -z "$filename" ] && filename="$1" || files+=("$1") ;;
  esac
  shift
done
[ -z "$files" ] && raise "No input files found."
! [[ "$filename" =~ .nc$ ]] && raise "File $filename does not end in '.nc' extension." # output file
# Get the concatenation dimension
for file in "${files[@]}"; do
  iname=$(ncdump -h "${files[0]}" | grep domain_decomposition | cut -d: -f1 | xargs)
  if [ -z "$iname" ]; then
    raise "File $file does not have dimension with domain_decomposition attribute."
  elif [ -n "$dname" ] && [ "$dname" != "$iname" ]; then
    raise "File $file has different domain_decomposition dimension, ${iname}, from dimension from previous file, ${dname}."
  fi
  dname=$iname
done
# Test whether concatenation dimension is unlimited
ncdump -h "${files[0]}" | grep 'UNLIMITED' | grep $dname &>/dev/null
[ $? -eq 0 ] && unlimited=true || unlimited=false

# Combine files in one of two ways
# Found out that mppnccombine is *slower* than ncrcat! So if possible, always
# use ncrcat and do not fix unlimited dimensions!
# ./mppncdivide -f -d=time test.nc; rm tmp.nc; time ./mppnccombine.x tmp.nc test.*.nc
# ./mppncdivide -d=time test.nc; rm tmp.nc; time ncrcat -O test.*.nc tmp.nc
rm "$filename" 2>/dev/null
if $unlimited; then
  ! which ncrcat &>/dev/null && \
    raise "ncrcat not found, mppnccombine requires the NetCDF Operators (NCO) tools."
  ncrcat -O "${files[@]}" "$filename"
  [ $? -ne 0 ] && raise "ncrcat failed."
# Combine with mppnccombine
else
  ! which ./mppnccombine.x &>/dev/null && \
    raise "./mppnccombine.x executable not found. You must compile mppnccombine.c with the make.sh script."
  ./mppnccombine.x "$filename" "${files[@]}"
  [ $? -ne 0 ] && raise "mppnccombine.x failed."
fi
# Message
$silent || echo "$filename"
